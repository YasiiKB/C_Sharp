// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NoiseCalMeas.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NoiseCalMeas {

  /// <summary>Holder for reflection information generated from NoiseCalMeas.proto</summary>
  public static partial class NoiseCalMeasReflection {

    #region Descriptor
    /// <summary>File descriptor for NoiseCalMeas.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NoiseCalMeasReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJOb2lzZUNhbE1lYXMucHJvdG8SBHRlc3QiQwoLbWVhdXJlbWVudHMSDQoF",
            "ZnJlcXMYASADKAESGAoQbnVtYmVyX29mX2dhbW1hcxgCIAEoBRILCgNlbnIY",
            "AyADKAFCD6oCDE5vaXNlQ2FsTWVhc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NoiseCalMeas.meaurements), global::NoiseCalMeas.meaurements.Parser, new[]{ "Freqs", "NumberOfGammas", "Enr" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message for NoiseCalMeas
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class meaurements : pb::IMessage<meaurements>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<meaurements> _parser = new pb::MessageParser<meaurements>(() => new meaurements());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<meaurements> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NoiseCalMeas.NoiseCalMeasReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public meaurements() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public meaurements(meaurements other) : this() {
      freqs_ = other.freqs_.Clone();
      numberOfGammas_ = other.numberOfGammas_;
      enr_ = other.enr_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public meaurements Clone() {
      return new meaurements(this);
    }

    /// <summary>Field number for the "freqs" field.</summary>
    public const int FreqsFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_freqs_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> freqs_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Frequencies 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Freqs {
      get { return freqs_; }
    }

    /// <summary>Field number for the "number_of_gammas" field.</summary>
    public const int NumberOfGammasFieldNumber = 2;
    private int numberOfGammas_;
    /// <summary>
    /// Number of GammaSource positions measured -1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfGammas {
      get { return numberOfGammas_; }
      set {
        numberOfGammas_ = value;
      }
    }

    /// <summary>Field number for the "enr" field.</summary>
    public const int EnrFieldNumber = 3;
    private static readonly pb::FieldCodec<double> _repeated_enr_codec
        = pb::FieldCodec.ForDouble(26);
    private readonly pbc::RepeatedField<double> enr_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// ENR over frequency of the noise source
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Enr {
      get { return enr_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as meaurements);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(meaurements other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!freqs_.Equals(other.freqs_)) return false;
      if (NumberOfGammas != other.NumberOfGammas) return false;
      if(!enr_.Equals(other.enr_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= freqs_.GetHashCode();
      if (NumberOfGammas != 0) hash ^= NumberOfGammas.GetHashCode();
      hash ^= enr_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      freqs_.WriteTo(output, _repeated_freqs_codec);
      if (NumberOfGammas != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumberOfGammas);
      }
      enr_.WriteTo(output, _repeated_enr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      freqs_.WriteTo(ref output, _repeated_freqs_codec);
      if (NumberOfGammas != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumberOfGammas);
      }
      enr_.WriteTo(ref output, _repeated_enr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += freqs_.CalculateSize(_repeated_freqs_codec);
      if (NumberOfGammas != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfGammas);
      }
      size += enr_.CalculateSize(_repeated_enr_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(meaurements other) {
      if (other == null) {
        return;
      }
      freqs_.Add(other.freqs_);
      if (other.NumberOfGammas != 0) {
        NumberOfGammas = other.NumberOfGammas;
      }
      enr_.Add(other.enr_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            freqs_.AddEntriesFrom(input, _repeated_freqs_codec);
            break;
          }
          case 16: {
            NumberOfGammas = input.ReadInt32();
            break;
          }
          case 26:
          case 25: {
            enr_.AddEntriesFrom(input, _repeated_enr_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            freqs_.AddEntriesFrom(ref input, _repeated_freqs_codec);
            break;
          }
          case 16: {
            NumberOfGammas = input.ReadInt32();
            break;
          }
          case 26:
          case 25: {
            enr_.AddEntriesFrom(ref input, _repeated_enr_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
